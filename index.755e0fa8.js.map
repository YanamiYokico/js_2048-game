{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.initialState = initialState ? initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        }) : null;\n        if (this.initialState) this.board = this.initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n        else this.board = [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status !== \"playing\") return;\n                var boardChanged = false;\n                for(var i = 0; i < 4; i++){\n                    var origRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(this.board[i]);\n                    var newRow = this.MergeOrigRow(origRow);\n                    if (!this.ArraysEqual(origRow, newRow)) {\n                        this.board[i] = newRow;\n                        boardChanged = true;\n                    }\n                }\n                if (boardChanged) {\n                    this.addRandomTile();\n                    this.CheckGameStatus();\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.status !== \"playing\") return;\n                var boardChanged = false;\n                for(var i = 0; i < 4; i++){\n                    var origRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(this.board[i]);\n                    var reversed = origRow.slice().reverse();\n                    var newRow = this.MergeOrigRow(reversed).reverse();\n                    if (!this.ArraysEqual(origRow, newRow)) {\n                        this.board[i] = newRow;\n                        boardChanged = true;\n                    }\n                }\n                if (boardChanged) {\n                    this.addRandomTile();\n                    this.CheckGameStatus();\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.status !== \"playing\") return;\n                var boardChanged = false;\n                for(var col = 0; col < 4; col++){\n                    var column = [];\n                    for(var row = 0; row < 4; row++)column.push(this.board[row][col]);\n                    var newCol = this.MergeOrigRow(column);\n                    for(var row1 = 0; row1 < 4; row1++)if (this.board[row1][col] !== newCol[row1]) {\n                        this.board[row1][col] = newCol[row1];\n                        boardChanged = true;\n                    }\n                }\n                if (boardChanged) {\n                    this.addRandomTile();\n                    this.CheckGameStatus();\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.status !== \"playing\") return;\n                var boardChanged = false;\n                for(var col = 0; col < 4; col++){\n                    var column = [];\n                    for(var row = 0; row < 4; row++)column.push(this.board[row][col]);\n                    var reversed = column.slice().reverse();\n                    var newCol = this.MergeOrigRow(reversed).reverse();\n                    for(var row1 = 0; row1 < 4; row1++)if (this.board[row1][col] !== newCol[row1]) {\n                        this.board[row1][col] = newCol[row1];\n                        boardChanged = true;\n                    }\n                }\n                if (boardChanged) {\n                    this.addRandomTile();\n                    this.CheckGameStatus();\n                }\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.addRandomTile();\n                this.addRandomTile();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.initialState;\n                this.initialState = initialState ? initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                }) : null;\n                if (this.initialState) this.board = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                else this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            // Add your own methods here\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptCells = [];\n                for(var i = 0; i < 4; i++){\n                    for(var j = 0; j < 4; j++)if (this.board[i][j] === 0) emptCells.push({\n                        x: i,\n                        y: j\n                    });\n                }\n                if (emptCells.length > 0) {\n                    var _emptCells_Math_floor = emptCells[Math.floor(Math.random() * emptCells.length)], x = _emptCells_Math_floor.x, y = _emptCells_Math_floor.y;\n                    this.board[x][y] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"MergeOrigRow\",\n            value: function MergeOrigRow(row) {\n                var newRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                for(var i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1] && newRow[i] !== 0) {\n                    newRow[i] *= 2;\n                    this.score += newRow[i];\n                    newRow[i + 1] = 0;\n                }\n                var merged = newRow.filter(function(n) {\n                    return n !== 0;\n                });\n                while(merged.length < 4)merged.push(0);\n                return merged;\n            }\n        },\n        {\n            key: \"CheckGameStatus\",\n            value: function CheckGameStatus() {\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.board[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n                        try {\n                            for(var _iterator1 = row[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                                var cell = _step1.value;\n                                if (cell === 2048) {\n                                    this.status = \"win\";\n                                    return;\n                                }\n                            }\n                        } catch (err) {\n                            _didIteratorError1 = true;\n                            _iteratorError1 = err;\n                        } finally{\n                            try {\n                                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                                    _iterator1.return();\n                                }\n                            } finally{\n                                if (_didIteratorError1) {\n                                    throw _iteratorError1;\n                                }\n                            }\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                var _iteratorNormalCompletion2 = true, _didIteratorError2 = false, _iteratorError2 = undefined;\n                try {\n                    for(var _iterator2 = this.board[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true){\n                        var row1 = _step2.value;\n                        if (row1.includes(0)) return;\n                    }\n                } catch (err) {\n                    _didIteratorError2 = true;\n                    _iteratorError2 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                            _iterator2.return();\n                        }\n                    } finally{\n                        if (_didIteratorError2) {\n                            throw _iteratorError2;\n                        }\n                    }\n                }\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n                    if (i < 3 && this.board[i][j] === this.board[i + 1][j]) return;\n                    if (j < 3 && this.board[i][j] === this.board[i][j + 1]) return;\n                }\n                this.status = \"lose\";\n            }\n        },\n        {\n            key: \"ArraysEqual\",\n            value: function ArraysEqual(a, b) {\n                return a.length === b.length && a.every(function(val, i) {\n                    return val === b[i];\n                });\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\n// Write your code here\nvar $197cd56b15c33885$var$gameField = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$scoreElement = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nfunction $197cd56b15c33885$var$renderBoard() {\n    var cells = $197cd56b15c33885$var$gameField.querySelectorAll(\".field-cell\");\n    var board = $197cd56b15c33885$var$game.getState();\n    cells.forEach(function(cell, index) {\n        var row = Math.floor(index / 4);\n        var col = index % 4;\n        var value = board[row][col];\n        cell.textContent = value === 0 ? \"\" : value;\n        cell.className = \"field-cell field-cell--\".concat(value);\n    });\n    $197cd56b15c33885$var$scoreElement.textContent = $197cd56b15c33885$var$game.getScore();\n}\nfunction $197cd56b15c33885$var$handleGameStatus() {\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    if (gameStatus === \"win\") {\n        $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    } else if (gameStatus === \"lose\") {\n        $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    } else {\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    }\n    if (gameStatus === \"playing\") {\n        $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n        $197cd56b15c33885$var$startButton.classList.add(\"restart\");\n        $197cd56b15c33885$var$startButton.classList.remove(\"start\");\n    } else {\n        $197cd56b15c33885$var$startButton.textContent = \"Start\";\n        $197cd56b15c33885$var$startButton.classList.add(\"start\");\n        $197cd56b15c33885$var$startButton.classList.remove(\"restart\");\n    }\n}\nfunction $197cd56b15c33885$var$startGame() {\n    $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$renderBoard();\n    $197cd56b15c33885$var$handleGameStatus();\n    $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n}\nfunction $197cd56b15c33885$var$handleKeyPress(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    switch(e.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            return;\n    }\n    $197cd56b15c33885$var$renderBoard();\n    $197cd56b15c33885$var$handleGameStatus();\n}\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", $197cd56b15c33885$var$startGame);\ndocument.addEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyPress);\n$197cd56b15c33885$var$renderBoard();\n\n})();\n//# sourceMappingURL=index.755e0fa8.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\n// Write your code here\nconst gameField = document.querySelector('.game-field');\nconst scoreElement = document.querySelector('.game-score');\nconst startButton = document.querySelector('.button.start');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nfunction renderBoard() {\n  const cells = gameField.querySelectorAll('.field-cell');\n  const board = game.getState();\n\n  cells.forEach((cell, index) => {\n    const row = Math.floor(index / 4);\n    const col = index % 4;\n    const value = board[row][col];\n\n    cell.textContent = value === 0 ? '' : value;\n    cell.className = `field-cell field-cell--${value}`;\n  });\n\n  scoreElement.textContent = game.getScore();\n}\n\nfunction handleGameStatus() {\n  const gameStatus = game.getStatus();\n\n  if (gameStatus === 'win') {\n    messageWin.classList.remove('hidden');\n    messageLose.classList.add('hidden');\n    messageStart.classList.add('hidden');\n  } else if (gameStatus === 'lose') {\n    messageLose.classList.remove('hidden');\n    messageWin.classList.add('hidden');\n    messageStart.classList.add('hidden');\n  } else {\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    messageStart.classList.add('hidden');\n  }\n\n  if (gameStatus === 'playing') {\n    startButton.textContent = 'Restart';\n    startButton.classList.add('restart');\n    startButton.classList.remove('start');\n  } else {\n    startButton.textContent = 'Start';\n    startButton.classList.add('start');\n    startButton.classList.remove('restart');\n  }\n}\n\nfunction startGame() {\n  game.restart();\n  game.start();\n  renderBoard();\n  handleGameStatus();\n\n  startButton.textContent = 'Restart';\n}\n\nfunction handleKeyPress(e) {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    default:\n      return;\n  }\n\n  renderBoard();\n  handleGameStatus();\n}\n\nstartButton.addEventListener('click', startGame);\ndocument.addEventListener('keydown', handleKeyPress);\n\nrenderBoard();\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState) {\n    this.initialState = initialState\n      ? initialState.map((row) => [...row])\n      : null;\n\n    if (this.initialState) {\n      this.board = this.initialState.map((row) => [...row]);\n    } else {\n      this.board = [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ];\n    }\n\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let boardChanged = false;\n\n    for (let i = 0; i < 4; i++) {\n      const origRow = [...this.board[i]];\n      const newRow = this.MergeOrigRow(origRow);\n\n      if (!this.ArraysEqual(origRow, newRow)) {\n        this.board[i] = newRow;\n        boardChanged = true;\n      }\n    }\n\n    if (boardChanged) {\n      this.addRandomTile();\n      this.CheckGameStatus();\n    }\n  }\n\n  moveRight() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let boardChanged = false;\n\n    for (let i = 0; i < 4; i++) {\n      const origRow = [...this.board[i]];\n      const reversed = origRow.slice().reverse();\n      const newRow = this.MergeOrigRow(reversed).reverse();\n\n      if (!this.ArraysEqual(origRow, newRow)) {\n        this.board[i] = newRow;\n        boardChanged = true;\n      }\n    }\n\n    if (boardChanged) {\n      this.addRandomTile();\n      this.CheckGameStatus();\n    }\n  }\n\n  moveUp() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let boardChanged = false;\n\n    for (let col = 0; col < 4; col++) {\n      const column = [];\n\n      for (let row = 0; row < 4; row++) {\n        column.push(this.board[row][col]);\n      }\n\n      const newCol = this.MergeOrigRow(column);\n\n      for (let row = 0; row < 4; row++) {\n        if (this.board[row][col] !== newCol[row]) {\n          this.board[row][col] = newCol[row];\n          boardChanged = true;\n        }\n      }\n    }\n\n    if (boardChanged) {\n      this.addRandomTile();\n      this.CheckGameStatus();\n    }\n  }\n\n  moveDown() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let boardChanged = false;\n\n    for (let col = 0; col < 4; col++) {\n      const column = [];\n\n      for (let row = 0; row < 4; row++) {\n        column.push(this.board[row][col]);\n      }\n\n      const reversed = column.slice().reverse();\n      const newCol = this.MergeOrigRow(reversed).reverse();\n\n      for (let row = 0; row < 4; row++) {\n        if (this.board[row][col] !== newCol[row]) {\n          this.board[row][col] = newCol[row];\n          boardChanged = true;\n        }\n      }\n    }\n\n    if (boardChanged) {\n      this.addRandomTile();\n      this.CheckGameStatus();\n    }\n  }\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.board.map((row) => [...row]);\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.status = 'playing';\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart(initialState = this.initialState) {\n    this.initialState = initialState\n      ? initialState.map((row) => [...row])\n      : null;\n\n    if (this.initialState) {\n      this.board = this.initialState.map((row) => [...row]);\n    } else {\n      this.board = [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ];\n    }\n\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  // Add your own methods here\n  addRandomTile() {\n    const emptCells = [];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.board[i][j] === 0) {\n          emptCells.push({\n            x: i, y: j,\n          });\n        }\n      }\n    }\n\n    if (emptCells.length > 0) {\n      const { x, y } = emptCells[Math.floor(Math.random() * emptCells.length)];\n\n      this.board[x][y] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  MergeOrigRow(row) {\n    const newRow = [...row];\n\n    for (let i = 0; i < newRow.length - 1; i++) {\n      if (newRow[i] === newRow[i + 1] && newRow[i] !== 0) {\n        newRow[i] *= 2;\n        this.score += newRow[i];\n        newRow[i + 1] = 0;\n      }\n    }\n\n    const merged = newRow.filter((n) => n !== 0);\n\n    while (merged.length < 4) {\n      merged.push(0);\n    }\n\n    return merged;\n  }\n\n  CheckGameStatus() {\n    for (const row of this.board) {\n      for (const cell of row) {\n        if (cell === 2048) {\n          this.status = 'win';\n\n          return;\n        }\n      }\n    }\n\n    for (const row of this.board) {\n      if (row.includes(0)) {\n        return;\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (i < 3 && this.board[i][j] === this.board[i + 1][j]) {\n          return;\n        }\n\n        if (j < 3 && this.board[i][j] === this.board[i][j + 1]) {\n          return;\n        }\n      }\n    }\n\n    this.status = 'lose';\n  }\n\n  ArraysEqual(a, b) {\n    return a.length === b.length && a.every((val, i) => val === b[i]);\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","instance","Constructor","map","row","board","score","status","key","value","boardChanged","origRow","newRow","MergeOrigRow","ArraysEqual","addRandomTile","CheckGameStatus","reversed","reverse","col","column","push","newCol","row1","arguments","emptCells","j","x","y","_emptCells_Math_floor","Math","floor","random","merged","filter","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","cell","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","includes","a","b","every","val","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$gameField","document","querySelector","$197cd56b15c33885$var$scoreElement","$197cd56b15c33885$var$startButton","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$renderBoard","cells","querySelectorAll","getState","forEach","index","textContent","className","concat","getScore","$197cd56b15c33885$var$handleGameStatus","gameStatus","getStatus","classList","remove","add","addEventListener","restart","start","e","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.755e0fa8.js.map"}